#include <iostream>
using namespace std;
typedef int ElemType;
typedef struct LNode
{
    ElemType data;
    struct LNode* next;
    struct LNode* prior;
}LinkNode,*LinkList;
void LinkInit(LinkList &L)
{
    L=(LinkNode*)malloc(sizeof(LinkNode));
    L->next=NULL;
    L->prior=NULL;
}
void LinkCreate(LinkList &L,int n)
{
    LinkNode* p=L,*q;
    for(int i=0;i<n;++i)
    {
        q=p;
        p->next=(LinkList)malloc(sizeof(LinkNode));
        p=p->next;
        p->prior=q;
        cin>>p->data;
    }
    p->next=NULL;
}
void deletex(LinkList &L,int x)
{
    LinkNode* p=L->next,*q=L;
    while(p)
    {
     if(p->data==x)
     {
         q->next=p->next;
         free(p);
         p=q->next;
     }
      else
      {
          p=p->next;
          q=q->next;
      }
    }
 }
void show(LinkList &L)
{
    LinkNode *p=L->next;
    while (p)
    {
        cout<<p->data<<' ';
        p=p->next;
    }
}
int main()
{
    int n,x;
    LinkNode* L1;
    LinkInit(L1);
    cin>>n;
    LinkCreate(L1,n);
    cin>>x;
    deletex(L1,x);
    show(L1);
    return 0;
}
