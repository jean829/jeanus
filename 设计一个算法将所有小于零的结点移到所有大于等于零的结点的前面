#include <iostream>
using namespace std;
typedef int elemtype;
typedef  struct LNode
{
    elemtype data;
    struct LNode* next;
}LinkNode,*LinkList;
void LinkInit(LinkList &L)
 {
     L=(LinkNode*)malloc(sizeof(LinkNode));
     L->next=NULL;
 }
void LinkCreate(LinkList &L,int n)
 {
     LinkNode* p=L,*q;
     for(int i=0;i<n;++i)
     {
         q=p;
         p->next=(LinkList)malloc(sizeof(LinkNode));
         p=p->next;
         cin>>p->data;
     }
     p->next=NULL;
 }
void change(LinkList &L)
{
    LinkNode *p=L,*q;
    while(p->next)
    {
        q=p->next;
        if(q->data<0&&p!=L)
        {
            p->next=q->next;
            q->next=L->next;
            L->next=q;
        }
        else
        {
            p=p->next;
        }
    }
}
void show(LinkList &L)
 {
     LinkNode *p=L->next;
     while (p)
     {
         cout<<p->data<<' ';
         p=p->next;
     }
 }
int main()
{
    int n;
    LinkNode* L;
    LinkInit(L);
    cin>>n;
    LinkCreate(L,n);
    change(L);
    show(L);
    return 0;
}
